// Code generated by protoc-gen-go. DO NOT EDIT.
// source: student/studentpb/student.proto

package studentpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Student struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Student) Reset()         { *m = Student{} }
func (m *Student) String() string { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()    {}
func (*Student) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{0}
}

func (m *Student) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Student.Unmarshal(m, b)
}
func (m *Student) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Student.Marshal(b, m, deterministic)
}
func (m *Student) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Student.Merge(m, src)
}
func (m *Student) XXX_Size() int {
	return xxx_messageInfo_Student.Size(m)
}
func (m *Student) XXX_DiscardUnknown() {
	xxx_messageInfo_Student.DiscardUnknown(m)
}

var xxx_messageInfo_Student proto.InternalMessageInfo

func (m *Student) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Student) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

//register student
type RegisterStudentRequest struct {
	Student              *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterStudentRequest) Reset()         { *m = RegisterStudentRequest{} }
func (m *RegisterStudentRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterStudentRequest) ProtoMessage()    {}
func (*RegisterStudentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{1}
}

func (m *RegisterStudentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterStudentRequest.Unmarshal(m, b)
}
func (m *RegisterStudentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterStudentRequest.Marshal(b, m, deterministic)
}
func (m *RegisterStudentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterStudentRequest.Merge(m, src)
}
func (m *RegisterStudentRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterStudentRequest.Size(m)
}
func (m *RegisterStudentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterStudentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterStudentRequest proto.InternalMessageInfo

func (m *RegisterStudentRequest) GetStudent() *Student {
	if m != nil {
		return m.Student
	}
	return nil
}

type RegisterStudentResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterStudentResponse) Reset()         { *m = RegisterStudentResponse{} }
func (m *RegisterStudentResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterStudentResponse) ProtoMessage()    {}
func (*RegisterStudentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{2}
}

func (m *RegisterStudentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterStudentResponse.Unmarshal(m, b)
}
func (m *RegisterStudentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterStudentResponse.Marshal(b, m, deterministic)
}
func (m *RegisterStudentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterStudentResponse.Merge(m, src)
}
func (m *RegisterStudentResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterStudentResponse.Size(m)
}
func (m *RegisterStudentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterStudentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterStudentResponse proto.InternalMessageInfo

func (m *RegisterStudentResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

//get student list
type GetStudentListRequest struct {
	CollegeName          string   `protobuf:"bytes,1,opt,name=college_name,json=collegeName,proto3" json:"college_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStudentListRequest) Reset()         { *m = GetStudentListRequest{} }
func (m *GetStudentListRequest) String() string { return proto.CompactTextString(m) }
func (*GetStudentListRequest) ProtoMessage()    {}
func (*GetStudentListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{3}
}

func (m *GetStudentListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStudentListRequest.Unmarshal(m, b)
}
func (m *GetStudentListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStudentListRequest.Marshal(b, m, deterministic)
}
func (m *GetStudentListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStudentListRequest.Merge(m, src)
}
func (m *GetStudentListRequest) XXX_Size() int {
	return xxx_messageInfo_GetStudentListRequest.Size(m)
}
func (m *GetStudentListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStudentListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStudentListRequest proto.InternalMessageInfo

func (m *GetStudentListRequest) GetCollegeName() string {
	if m != nil {
		return m.CollegeName
	}
	return ""
}

type GetStudentListResponse struct {
	StudentName          string   `protobuf:"bytes,1,opt,name=student_name,json=studentName,proto3" json:"student_name,omitempty"`
	CollegeName          string   `protobuf:"bytes,2,opt,name=college_name,json=collegeName,proto3" json:"college_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStudentListResponse) Reset()         { *m = GetStudentListResponse{} }
func (m *GetStudentListResponse) String() string { return proto.CompactTextString(m) }
func (*GetStudentListResponse) ProtoMessage()    {}
func (*GetStudentListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{4}
}

func (m *GetStudentListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStudentListResponse.Unmarshal(m, b)
}
func (m *GetStudentListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStudentListResponse.Marshal(b, m, deterministic)
}
func (m *GetStudentListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStudentListResponse.Merge(m, src)
}
func (m *GetStudentListResponse) XXX_Size() int {
	return xxx_messageInfo_GetStudentListResponse.Size(m)
}
func (m *GetStudentListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStudentListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStudentListResponse proto.InternalMessageInfo

func (m *GetStudentListResponse) GetStudentName() string {
	if m != nil {
		return m.StudentName
	}
	return ""
}

func (m *GetStudentListResponse) GetCollegeName() string {
	if m != nil {
		return m.CollegeName
	}
	return ""
}

type SendStudentDataRequest struct {
	Student              *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStudentDataRequest) Reset()         { *m = SendStudentDataRequest{} }
func (m *SendStudentDataRequest) String() string { return proto.CompactTextString(m) }
func (*SendStudentDataRequest) ProtoMessage()    {}
func (*SendStudentDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{5}
}

func (m *SendStudentDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStudentDataRequest.Unmarshal(m, b)
}
func (m *SendStudentDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStudentDataRequest.Marshal(b, m, deterministic)
}
func (m *SendStudentDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStudentDataRequest.Merge(m, src)
}
func (m *SendStudentDataRequest) XXX_Size() int {
	return xxx_messageInfo_SendStudentDataRequest.Size(m)
}
func (m *SendStudentDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStudentDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendStudentDataRequest proto.InternalMessageInfo

func (m *SendStudentDataRequest) GetStudent() *Student {
	if m != nil {
		return m.Student
	}
	return nil
}

type SendStudentDataResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStudentDataResponse) Reset()         { *m = SendStudentDataResponse{} }
func (m *SendStudentDataResponse) String() string { return proto.CompactTextString(m) }
func (*SendStudentDataResponse) ProtoMessage()    {}
func (*SendStudentDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{6}
}

func (m *SendStudentDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStudentDataResponse.Unmarshal(m, b)
}
func (m *SendStudentDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStudentDataResponse.Marshal(b, m, deterministic)
}
func (m *SendStudentDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStudentDataResponse.Merge(m, src)
}
func (m *SendStudentDataResponse) XXX_Size() int {
	return xxx_messageInfo_SendStudentDataResponse.Size(m)
}
func (m *SendStudentDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStudentDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendStudentDataResponse proto.InternalMessageInfo

func (m *SendStudentDataResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type SendStudentsDataRequest struct {
	Student              *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStudentsDataRequest) Reset()         { *m = SendStudentsDataRequest{} }
func (m *SendStudentsDataRequest) String() string { return proto.CompactTextString(m) }
func (*SendStudentsDataRequest) ProtoMessage()    {}
func (*SendStudentsDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{7}
}

func (m *SendStudentsDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStudentsDataRequest.Unmarshal(m, b)
}
func (m *SendStudentsDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStudentsDataRequest.Marshal(b, m, deterministic)
}
func (m *SendStudentsDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStudentsDataRequest.Merge(m, src)
}
func (m *SendStudentsDataRequest) XXX_Size() int {
	return xxx_messageInfo_SendStudentsDataRequest.Size(m)
}
func (m *SendStudentsDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStudentsDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendStudentsDataRequest proto.InternalMessageInfo

func (m *SendStudentsDataRequest) GetStudent() *Student {
	if m != nil {
		return m.Student
	}
	return nil
}

type SendStudentsDataResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendStudentsDataResponse) Reset()         { *m = SendStudentsDataResponse{} }
func (m *SendStudentsDataResponse) String() string { return proto.CompactTextString(m) }
func (*SendStudentsDataResponse) ProtoMessage()    {}
func (*SendStudentsDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e507e88556d669a, []int{8}
}

func (m *SendStudentsDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendStudentsDataResponse.Unmarshal(m, b)
}
func (m *SendStudentsDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendStudentsDataResponse.Marshal(b, m, deterministic)
}
func (m *SendStudentsDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendStudentsDataResponse.Merge(m, src)
}
func (m *SendStudentsDataResponse) XXX_Size() int {
	return xxx_messageInfo_SendStudentsDataResponse.Size(m)
}
func (m *SendStudentsDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendStudentsDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendStudentsDataResponse proto.InternalMessageInfo

func (m *SendStudentsDataResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Student)(nil), "student.Student")
	proto.RegisterType((*RegisterStudentRequest)(nil), "student.RegisterStudentRequest")
	proto.RegisterType((*RegisterStudentResponse)(nil), "student.RegisterStudentResponse")
	proto.RegisterType((*GetStudentListRequest)(nil), "student.GetStudentListRequest")
	proto.RegisterType((*GetStudentListResponse)(nil), "student.GetStudentListResponse")
	proto.RegisterType((*SendStudentDataRequest)(nil), "student.SendStudentDataRequest")
	proto.RegisterType((*SendStudentDataResponse)(nil), "student.SendStudentDataResponse")
	proto.RegisterType((*SendStudentsDataRequest)(nil), "student.SendStudentsDataRequest")
	proto.RegisterType((*SendStudentsDataResponse)(nil), "student.SendStudentsDataResponse")
}

func init() {
	proto.RegisterFile("student/studentpb/student.proto", fileDescriptor_6e507e88556d669a)
}

var fileDescriptor_6e507e88556d669a = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcf, 0x4f, 0xfa, 0x50,
	0x0c, 0x67, 0x1c, 0xe0, 0xbb, 0x8e, 0x7c, 0x21, 0x4d, 0x9c, 0x04, 0xa3, 0xc0, 0x4e, 0xc4, 0x03,
	0x22, 0xde, 0x3c, 0x1a, 0x88, 0x17, 0xe3, 0x61, 0x24, 0xc6, 0x98, 0xa8, 0x19, 0x50, 0xc9, 0x92,
	0xb1, 0xe1, 0xfa, 0xf0, 0x3f, 0xf7, 0x6e, 0x18, 0xdd, 0xdc, 0xd8, 0xc0, 0x84, 0xd3, 0xde, 0x6b,
	0xfb, 0xf9, 0xb1, 0xf6, 0x15, 0xda, 0xac, 0xd6, 0x73, 0xf2, 0xd5, 0x95, 0x7c, 0x57, 0xd3, 0xf8,
	0xd4, 0x5f, 0x85, 0x81, 0x0a, 0xb0, 0x2a, 0x57, 0x6b, 0x0c, 0xd5, 0xc9, 0xf6, 0x88, 0xe7, 0x00,
	0x1f, 0x6e, 0xc8, 0xea, 0xdd, 0x77, 0x96, 0xd4, 0xd4, 0x3a, 0x5a, 0x4f, 0xb7, 0xf5, 0x28, 0xf2,
	0xe8, 0x2c, 0x09, 0xcf, 0x40, 0xf7, 0x9c, 0x38, 0x5b, 0x8e, 0xb2, 0xff, 0x36, 0x81, 0x4d, 0xd2,
	0x1a, 0x81, 0x69, 0xd3, 0xc2, 0x65, 0x45, 0xa1, 0xd0, 0xd9, 0xf4, 0xb9, 0x26, 0x56, 0x78, 0x09,
	0xb1, 0x56, 0x44, 0x69, 0x0c, 0x1b, 0xfd, 0xd8, 0x4a, 0x5c, 0x99, 0x98, 0xb9, 0x86, 0xd3, 0x1c,
	0x0b, 0xaf, 0x02, 0x9f, 0x09, 0x4d, 0xa8, 0x84, 0xc4, 0x6b, 0x4f, 0x89, 0x31, 0xb9, 0x59, 0xb7,
	0x70, 0x72, 0x4f, 0x4a, 0xaa, 0x1f, 0x5c, 0x4e, 0x74, 0xbb, 0x50, 0x9b, 0x05, 0x9e, 0x47, 0x0b,
	0x4a, 0xff, 0x8f, 0x21, 0xb1, 0xc8, 0xf4, 0x1b, 0x98, 0xbb, 0x58, 0x51, 0xeb, 0x42, 0x4d, 0x3c,
	0x65, 0xc0, 0x12, 0x8b, 0xda, 0xb1, 0xcb, 0x5f, 0xce, 0xf3, 0x8f, 0xc0, 0x9c, 0x90, 0x3f, 0x17,
	0x81, 0x91, 0xa3, 0x9c, 0x23, 0x9b, 0x92, 0x63, 0xf9, 0xa3, 0x29, 0xe3, 0x0c, 0x84, 0x8f, 0x55,
	0x1e, 0x42, 0x33, 0x4f, 0x73, 0x58, 0x7a, 0xf8, 0x5d, 0x86, 0xff, 0x02, 0x98, 0x50, 0xf8, 0xe5,
	0xce, 0x08, 0x9f, 0xa0, 0x1e, 0x66, 0xa7, 0x8a, 0xed, 0x44, 0xb4, 0xf8, 0xd5, 0xb4, 0x3a, 0xfb,
	0x0b, 0xb6, 0x06, 0xac, 0x12, 0xda, 0x60, 0x2c, 0x92, 0xf1, 0x31, 0x5e, 0x24, 0x90, 0xc2, 0x07,
	0xd1, 0x6a, 0xef, 0xcd, 0xc7, 0x8c, 0x03, 0x0d, 0x9f, 0xa1, 0xce, 0xd9, 0x66, 0xa7, 0xbc, 0x16,
	0x0f, 0x33, 0xe5, 0x75, 0xcf, 0x9c, 0xac, 0x52, 0x4f, 0xc3, 0x57, 0x68, 0xf0, 0x4e, 0x33, 0xb1,
	0x10, 0x99, 0x1e, 0x57, 0xab, 0x7b, 0xa0, 0xe2, 0x97, 0x7c, 0xa0, 0xdd, 0x19, 0x2f, 0x7a, 0xb2,
	0xeb, 0xd3, 0x4a, 0xb4, 0xe4, 0x37, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x16, 0x2d, 0xa6, 0xf8,
	0x07, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StudentServiceClient is the client API for StudentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StudentServiceClient interface {
	//unary
	RegisterStudent(ctx context.Context, in *RegisterStudentRequest, opts ...grpc.CallOption) (*RegisterStudentResponse, error)
	//server streaming
	GetStudents(ctx context.Context, in *GetStudentListRequest, opts ...grpc.CallOption) (StudentService_GetStudentsClient, error)
	//client streaming
	SendStudentData(ctx context.Context, opts ...grpc.CallOption) (StudentService_SendStudentDataClient, error)
	//BiDirectional streaming
	SendStudentsData(ctx context.Context, opts ...grpc.CallOption) (StudentService_SendStudentsDataClient, error)
}

type studentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentServiceClient(cc grpc.ClientConnInterface) StudentServiceClient {
	return &studentServiceClient{cc}
}

func (c *studentServiceClient) RegisterStudent(ctx context.Context, in *RegisterStudentRequest, opts ...grpc.CallOption) (*RegisterStudentResponse, error) {
	out := new(RegisterStudentResponse)
	err := c.cc.Invoke(ctx, "/student.StudentService/registerStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetStudents(ctx context.Context, in *GetStudentListRequest, opts ...grpc.CallOption) (StudentService_GetStudentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StudentService_serviceDesc.Streams[0], "/student.StudentService/getStudents", opts...)
	if err != nil {
		return nil, err
	}
	x := &studentServiceGetStudentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StudentService_GetStudentsClient interface {
	Recv() (*GetStudentListResponse, error)
	grpc.ClientStream
}

type studentServiceGetStudentsClient struct {
	grpc.ClientStream
}

func (x *studentServiceGetStudentsClient) Recv() (*GetStudentListResponse, error) {
	m := new(GetStudentListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *studentServiceClient) SendStudentData(ctx context.Context, opts ...grpc.CallOption) (StudentService_SendStudentDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StudentService_serviceDesc.Streams[1], "/student.StudentService/sendStudentData", opts...)
	if err != nil {
		return nil, err
	}
	x := &studentServiceSendStudentDataClient{stream}
	return x, nil
}

type StudentService_SendStudentDataClient interface {
	Send(*SendStudentDataRequest) error
	CloseAndRecv() (*SendStudentDataResponse, error)
	grpc.ClientStream
}

type studentServiceSendStudentDataClient struct {
	grpc.ClientStream
}

func (x *studentServiceSendStudentDataClient) Send(m *SendStudentDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *studentServiceSendStudentDataClient) CloseAndRecv() (*SendStudentDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendStudentDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *studentServiceClient) SendStudentsData(ctx context.Context, opts ...grpc.CallOption) (StudentService_SendStudentsDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StudentService_serviceDesc.Streams[2], "/student.StudentService/sendStudentsData", opts...)
	if err != nil {
		return nil, err
	}
	x := &studentServiceSendStudentsDataClient{stream}
	return x, nil
}

type StudentService_SendStudentsDataClient interface {
	Send(*SendStudentsDataRequest) error
	Recv() (*SendStudentsDataResponse, error)
	grpc.ClientStream
}

type studentServiceSendStudentsDataClient struct {
	grpc.ClientStream
}

func (x *studentServiceSendStudentsDataClient) Send(m *SendStudentsDataRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *studentServiceSendStudentsDataClient) Recv() (*SendStudentsDataResponse, error) {
	m := new(SendStudentsDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StudentServiceServer is the server API for StudentService service.
type StudentServiceServer interface {
	//unary
	RegisterStudent(context.Context, *RegisterStudentRequest) (*RegisterStudentResponse, error)
	//server streaming
	GetStudents(*GetStudentListRequest, StudentService_GetStudentsServer) error
	//client streaming
	SendStudentData(StudentService_SendStudentDataServer) error
	//BiDirectional streaming
	SendStudentsData(StudentService_SendStudentsDataServer) error
}

// UnimplementedStudentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStudentServiceServer struct {
}

func (*UnimplementedStudentServiceServer) RegisterStudent(ctx context.Context, req *RegisterStudentRequest) (*RegisterStudentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterStudent not implemented")
}
func (*UnimplementedStudentServiceServer) GetStudents(req *GetStudentListRequest, srv StudentService_GetStudentsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetStudents not implemented")
}
func (*UnimplementedStudentServiceServer) SendStudentData(srv StudentService_SendStudentDataServer) error {
	return status.Errorf(codes.Unimplemented, "method SendStudentData not implemented")
}
func (*UnimplementedStudentServiceServer) SendStudentsData(srv StudentService_SendStudentsDataServer) error {
	return status.Errorf(codes.Unimplemented, "method SendStudentsData not implemented")
}

func RegisterStudentServiceServer(s *grpc.Server, srv StudentServiceServer) {
	s.RegisterService(&_StudentService_serviceDesc, srv)
}

func _StudentService_RegisterStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterStudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).RegisterStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/student.StudentService/RegisterStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).RegisterStudent(ctx, req.(*RegisterStudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetStudents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetStudentListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StudentServiceServer).GetStudents(m, &studentServiceGetStudentsServer{stream})
}

type StudentService_GetStudentsServer interface {
	Send(*GetStudentListResponse) error
	grpc.ServerStream
}

type studentServiceGetStudentsServer struct {
	grpc.ServerStream
}

func (x *studentServiceGetStudentsServer) Send(m *GetStudentListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _StudentService_SendStudentData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StudentServiceServer).SendStudentData(&studentServiceSendStudentDataServer{stream})
}

type StudentService_SendStudentDataServer interface {
	SendAndClose(*SendStudentDataResponse) error
	Recv() (*SendStudentDataRequest, error)
	grpc.ServerStream
}

type studentServiceSendStudentDataServer struct {
	grpc.ServerStream
}

func (x *studentServiceSendStudentDataServer) SendAndClose(m *SendStudentDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *studentServiceSendStudentDataServer) Recv() (*SendStudentDataRequest, error) {
	m := new(SendStudentDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _StudentService_SendStudentsData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StudentServiceServer).SendStudentsData(&studentServiceSendStudentsDataServer{stream})
}

type StudentService_SendStudentsDataServer interface {
	Send(*SendStudentsDataResponse) error
	Recv() (*SendStudentsDataRequest, error)
	grpc.ServerStream
}

type studentServiceSendStudentsDataServer struct {
	grpc.ServerStream
}

func (x *studentServiceSendStudentsDataServer) Send(m *SendStudentsDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *studentServiceSendStudentsDataServer) Recv() (*SendStudentsDataRequest, error) {
	m := new(SendStudentsDataRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _StudentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "student.StudentService",
	HandlerType: (*StudentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerStudent",
			Handler:    _StudentService_RegisterStudent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getStudents",
			Handler:       _StudentService_GetStudents_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "sendStudentData",
			Handler:       _StudentService_SendStudentData_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "sendStudentsData",
			Handler:       _StudentService_SendStudentsData_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "student/studentpb/student.proto",
}
